services:
  flex:
    image: factorhouse/flex-ce:latest
    container_name: flex-ce
    pull_policy: always
    restart: always
    ports:
      - "3001:3000"
    networks:
      - factorhouse
    depends_on:
      jobmanager:
        condition: service_healthy
    env_file:
      - resources/flex/config/community.env
      - ${KPOW_COMMUNITY_LICENSE:-resources/flex/config/community-license.env}
    mem_limit: 2G

  jobmanager:
    image: factorhouse/flink:latest
    container_name: jobmanager
    pull_policy: always
    command: jobmanager
    ports:
      - "8082:8081"
    networks:
      - factorhouse
    environment:
      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
      - AWS_REGION=us-east-1
      - CUSTOM_JARS_DIRS="/tmp/hadoop;/tmp/iceberg;/tmp/parquet"
    volumes:
      - ./resources/flex/flink/flink-conf.yaml:/opt/flink/conf/flink-conf.yaml:ro
      - ./resources/flex/flink/sql-client-defaults.yaml:/opt/flink/conf/sql-client-defaults.yaml:ro
      - ./resources/flex/connector:/tmp/connector
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/config"]
      interval: 5s
      timeout: 5s
      retries: 5

  taskmanager-1:
    image: factorhouse/flink:latest
    container_name: taskmanager-1
    pull_policy: always
    command: taskmanager
    networks:
      - factorhouse
    depends_on:
      jobmanager:
        condition: service_healthy
    environment:
      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
      - AWS_REGION=us-east-1
      - CUSTOM_JARS_DIRS="/tmp/hadoop;/tmp/iceberg;/tmp/parquet"
    volumes:
      - ./resources/flex/flink/flink-conf.yaml:/opt/flink/conf/flink-conf.yaml:ro
      - ./resources/flex/flink/sql-client-defaults.yaml:/opt/flink/conf/sql-client-defaults.yaml:ro
      - ./resources/flex/connector:/tmp/connector

  taskmanager-2:
    image: factorhouse/flink:latest
    container_name: taskmanager-2
    pull_policy: always
    command: taskmanager
    networks:
      - factorhouse
    depends_on:
      jobmanager:
        condition: service_healthy
    environment:
      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
      - AWS_REGION=us-east-1
      - CUSTOM_JARS_DIRS="/tmp/hadoop;/tmp/iceberg;/tmp/parquet"
    volumes:
      - ./resources/flex/flink/flink-conf.yaml:/opt/flink/conf/flink-conf.yaml:ro
      - ./resources/flex/flink/sql-client-defaults.yaml:/opt/flink/conf/sql-client-defaults.yaml:ro
      - ./resources/flex/connector:/tmp/connector

  taskmanager-3:
    image: factorhouse/flink:latest
    container_name: taskmanager-3
    pull_policy: always
    command: taskmanager
    networks:
      - factorhouse
    depends_on:
      jobmanager:
        condition: service_healthy
    environment:
      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
      - AWS_REGION=us-east-1
      - CUSTOM_JARS_DIRS="/tmp/hadoop;/tmp/iceberg;/tmp/parquet"
    volumes:
      - ./resources/flex/flink/flink-conf.yaml:/opt/flink/conf/flink-conf.yaml:ro
      - ./resources/flex/flink/sql-client-defaults.yaml:/opt/flink/conf/sql-client-defaults.yaml:ro
      - ./resources/flex/connector:/tmp/connector

  sql-gateway:
    image: factorhouse/flink:latest
    container_name: sql-gateway
    pull_policy: always
    command: >
      bin/sql-gateway.sh
      start-foreground
      -Dsql-gateway.endpoint.rest.address=0.0.0.0
      -Dsql-gateway.endpoint.rest.port=9090
      -Djobmanager.rpc.address=jobmanager
      -Drest.address=jobmanager
    ports:
      - "9090:9090"
    networks:
      - factorhouse
    depends_on:
      jobmanager:
        condition: service_healthy
    environment:
      - FLINK_SQL_GATEWAY_DEFAULT_CATALOG_NAME=default_catalog
      - FLINK_SQL_GATEWAY_DEFAULT_DATABASE_NAME=default_database
      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
      - AWS_REGION=us-east-1
      - CUSTOM_JARS_DIRS="/tmp/hadoop;/tmp/iceberg;/tmp/parquet"
    volumes:
      - ./resources/flex/flink/flink-conf.yaml:/opt/flink/conf/flink-conf.yaml:ro
      - ./resources/flex/flink/sql-client-defaults.yaml:/opt/flink/conf/sql-client-defaults.yaml:ro
      - ./resources/flex/connector:/tmp/connector

networks:
  factorhouse:
    external: ${USE_EXT:-true}
    name: factorhouse
