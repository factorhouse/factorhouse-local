services:
  spark:
    image: apache/spark:3.5.5-java17-python3
    container_name: spark-iceberg
    command: >
      bash -c "
      mkdir -p /tmp/spark-events &&
      /opt/spark/bin/spark-class org.apache.spark.deploy.history.HistoryServer \
        --properties-file /tmp/spark-defaults-history.conf"
    ports:
      - "4040:4040" # Spark Web UI
      - "18080:18080" # Spark History Server
    networks:
      - factorhouse
    depends_on:
      - rest
      - minio
    volumes:
      - ./resources/analytics/spark/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf:ro
      - ./resources/analytics/spark/spark-defaults-history.conf:/tmp/spark-defaults-history.conf:ro
      - ./resources/analytics/spark/log4j2.properties:/opt/spark/conf/log4j2.properties:ro
      - ./resources/analytics/jars/iceberg-spark-runtime-3.5_2.12-1.8.1.jar:/opt/spark/jars/iceberg-spark-runtime-3.5_2.12-1.8.1.jar
      - ./resources/analytics/jars/iceberg-aws-bundle-1.8.1.jar:/opt/spark/jars/iceberg-aws-bundle-1.8.1.jar
    environment:
      - SPARK_NO_DAEMONIZE=true
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
  rest:
    image: apache/iceberg-rest-fixture
    container_name: iceberg-rest
    ports:
      - 8181:8181
    networks:
      - factorhouse
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
      - CATALOG_S3_PATH__STYLE__ACCESS=true
      - AWS_CBOR_DISABLE=true
  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    ports:
      - 9001:9001
      - 9000:9000
    networks:
      - factorhouse
    command: ["server", "/data", "--console-address", ":9001"]
  mc:
    image: minio/mc
    container_name: mc
    networks:
      - factorhouse
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: |
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      # create warehouse bucket for iceberg
      /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc policy set public minio/warehouse;
      # create fh-dev-bucket bucket for general purposes
      /usr/bin/mc rm -r --force minio/fh-dev-bucket;
      /usr/bin/mc mb minio/fh-dev-bucket;
      /usr/bin/mc policy set public minio/fh-dev-bucket;
      tail -f /dev/null
      "
    depends_on:
      - minio
  # postgres:
  #   image: postgres:17
  #   container_name: postgres
  #   command: ["postgres", "-c", "wal_level=logical"]
  #   ports:
  #     - 5432:5432
  #   networks:
  #     - factorhouse
  #   volumes:
  #     - ./resources/analytics/postgres:/docker-entrypoint-initdb.d
  #   environment:
  #     POSTGRES_DB: factorhouse
  #     POSTGRES_USER: db_user
  #     POSTGRES_PASSWORD: db_password
  #     PGUSER: db_user
  #     TZ: UTC # change if necessary eg) Australia/Melbourne

networks:
  factorhouse:
    external: ${USE_EXT:-true}
    name: factorhouse
